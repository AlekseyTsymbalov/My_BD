version: '3.9'

services:
  php:
    build:
      context: .              # Build context is current directory
      dockerfile: docker/php/Dockerfile
    container_name: php83_app # Name our container
    volumes:
      - ./src:/var/www/public   # Mount our source code
    networks:
      - alex_network          # Connect to our network
    environment:
      PHP_IDE_CONFIG: serverName=Docker # For Xdebug
    # Make container restart unless stopped manually
    restart: unless-stopped

    # Nginx Service
  nginx:
    image: nginx:latest      # Use official Nginx image
    container_name: nginx_app
    ports:
      - "8000:80"           # Map port 8080 on our PC to 80 in container
    volumes:
      - ./src:/var/www/public  # Mount same source code
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php                 # Wait for PHP container
    networks:
      - alex_network
    restart: unless-stopped
  postgres_015:
    image: postgres:17.4
    container_name: postgres_container
    environment:
      POSTGRES_USER: alex
      POSTGRES_PASSWORD: alex01
      POSTGRES_DB: test_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "8080:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - alex_network
networks:
  alex_network:
    driver: bridge
volumes:
  pgdata:
    driver: local